# Generated by Django 4.1 on 2023-11-19 07:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccomMap",
            fields=[
                ("map_no", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=50, null=True)),
                ("장소명", models.TextField(blank=True, null=True)),
                ("소재지", models.TextField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "위치좌표_x축값",
                    models.FloatField(blank=True, db_column="위치좌표_X축값", null=True),
                ),
                (
                    "위치좌표_y축값",
                    models.FloatField(blank=True, db_column="위치좌표_Y축값", null=True),
                ),
            ],
            options={
                "db_table": "accom_map",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DailyHotel",
            fields=[
                (
                    "daily_hotel_name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("daily_hotel_address", models.CharField(max_length=255)),
                ("daily_hotel_image_link", models.TextField(blank=True, null=True)),
                (
                    "daily_hotel_rating",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("daily_hotel_link", models.TextField(blank=True, null=True)),
                (
                    "daily_hotel_room_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "daily_hotel_num",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "daily_hotel_review_clear",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "daily_hotel_review_location",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "daily_hotel_review_service",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "daily_hotel_review_facility",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("daily_hotel_price", models.IntegerField(blank=True, null=True)),
                ("daily_hotel_date", models.DateField(blank=True, null=True)),
                ("daily_hotel_stay_date", models.DateField(blank=True, null=True)),
                (
                    "daily_hotel_discount_rate",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "x_coordi",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "y_coordi",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "daily_hotel",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DailyHotelMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("daily_hotel_name", models.CharField(max_length=200)),
                ("daily_hotel_address", models.CharField(max_length=255)),
                ("daily_hotel_image_link", models.TextField(blank=True, null=True)),
                (
                    "daily_hotel_rating",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("daily_hotel_link", models.TextField(blank=True, null=True)),
                (
                    "daily_hotel_room_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "daily_hotel_num",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "daily_hotel_review_clear",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "daily_hotel_review_location",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "daily_hotel_review_service",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "daily_hotel_review_facility",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("daily_hotel_price", models.IntegerField(blank=True, null=True)),
                ("daily_hotel_date", models.DateField(blank=True, null=True)),
                ("daily_hotel_stay_date", models.DateField(blank=True, null=True)),
                (
                    "daily_hotel_discount_rate",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "x_coordi",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "y_coordi",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                ("row_num", models.PositiveBigIntegerField()),
            ],
            options={
                "db_table": "daily_hotel_map",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Goodchoice",
            fields=[
                (
                    "acc_name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("acc_address", models.CharField(max_length=255)),
                ("acc_image_link", models.TextField(blank=True, null=True)),
                (
                    "acc_rating",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("acc_price", models.TextField(blank=True, null=True)),
                ("acc_room_type", models.TextField(blank=True, null=True)),
                ("acc_remain_room", models.TextField(blank=True, null=True)),
                ("acc_link", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "goodchoice",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="JejuPerformanceVenue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("연번", models.IntegerField(blank=True, null=True)),
                (
                    "공연장명_개관일자_field",
                    models.TextField(blank=True, db_column="공연장명(개관일자)", null=True),
                ),
                ("소재지", models.TextField(blank=True, null=True)),
                ("시설구분", models.TextField(blank=True, null=True)),
                ("비_고", models.TextField(blank=True, db_column="비 고", null=True)),
                ("기준일자", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "jeju_performance_venue",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="JejuPlace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "장소_poi에_대한_id_구분_번호_체계",
                    models.IntegerField(
                        blank=True, db_column="장소 POI에 대한 ID 구분 번호 체계", null=True
                    ),
                ),
                (
                    "위치좌표_x축값",
                    models.FloatField(blank=True, db_column="위치좌표 X축값", null=True),
                ),
                (
                    "위치좌표_y축값",
                    models.FloatField(blank=True, db_column="위치좌표 Y축값", null=True),
                ),
                ("구분", models.TextField(blank=True, null=True)),
                ("장소명", models.TextField(blank=True, null=True)),
                ("소재지", models.TextField(blank=True, null=True)),
                ("데이터기준일자", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "jeju_place",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NaverBlog",
            fields=[
                (
                    "naver_blog_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("naver_blog_title", models.CharField(max_length=200)),
                ("naver_blog_link", models.TextField(blank=True, null=True)),
                ("naver_blog_image", models.TextField(blank=True, null=True)),
                ("naver_blog_hashtag", models.TextField(blank=True, null=True)),
                (
                    "naver_bloger_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "naver_blog_content_likeit_count",
                    models.IntegerField(blank=True, null=True),
                ),
                ("naver_blog_content_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "naver_blog",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                ("place_id", models.AutoField(primary_key=True, serialize=False)),
                ("place_name", models.CharField(max_length=200)),
                ("place_address", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "place",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PreferredAccommodationType",
            fields=[
                (
                    "preferred_accommodation_type_no",
                    models.CharField(
                        default=1, max_length=45, primary_key=True, serialize=False
                    ),
                ),
                ("preferred_accommodation_type", models.CharField(max_length=45)),
            ],
            options={
                "db_table": "preferred_accommodation_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PreferredRegion",
            fields=[
                (
                    "preferred_region_no",
                    models.CharField(
                        default=1, max_length=45, primary_key=True, serialize=False
                    ),
                ),
                ("preferred_region", models.CharField(max_length=45)),
            ],
            options={
                "db_table": "preferred_region",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PreferredTourThemeType",
            fields=[
                (
                    "preferred_tour_theme_type_no",
                    models.CharField(
                        default=1, max_length=45, primary_key=True, serialize=False
                    ),
                ),
                ("preferred_tour_theme_type", models.CharField(max_length=45)),
            ],
            options={
                "db_table": "preferred_tour_theme_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                ("restaurant_id", models.AutoField(primary_key=True, serialize=False)),
                ("restaurant_link", models.TextField(blank=True, null=True)),
                ("restaurant_image", models.TextField(blank=True, null=True)),
                ("restaurant_hashtag", models.TextField(blank=True, null=True)),
                ("restaurant_shop_name", models.TextField(blank=True, null=True)),
                (
                    "restaurant_content_likeit_count",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "restaurant_rating",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "restaurant_review_num_count",
                    models.IntegerField(blank=True, null=True),
                ),
                ("restaurant_avg_price", models.IntegerField(blank=True, null=True)),
                ("restaurant_shop_category", models.TextField(blank=True, null=True)),
                ("restaurant_map_x", models.IntegerField(blank=True, null=True)),
                ("restaurant_map_y", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "restaurant",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Tripbtoz",
            fields=[
                (
                    "trip_name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("trip_address", models.CharField(max_length=255)),
                ("trip_image_link", models.TextField(blank=True, null=True)),
                (
                    "trip_rating",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("trip_link", models.TextField(blank=True, null=True)),
                ("trip_date", models.DateField(blank=True, null=True)),
                ("trip_price", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "tripbtoz",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUser",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField(blank=True, null=True)),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=150, null=True)),
                ("last_name", models.CharField(blank=True, max_length=150, null=True)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
                ("user_name", models.CharField(max_length=30)),
                ("user_phone", models.CharField(max_length=20)),
                ("user_address", models.CharField(max_length=200)),
                ("profile_image", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "users_app_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "users_app_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "users_app_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Visitkorea",
            fields=[
                (
                    "visitkorea_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                (
                    "visitkorea_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "visitkorea_tel",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "visitkorea_firstimage",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "visitkorea_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "visitkorea_mapx",
                    models.DecimalField(
                        blank=True, decimal_places=9, max_digits=12, null=True
                    ),
                ),
                (
                    "visitkorea_mapy",
                    models.DecimalField(
                        blank=True, decimal_places=9, max_digits=12, null=True
                    ),
                ),
                ("visitkorea_mlevel", models.IntegerField(blank=True, null=True)),
                ("visitkorea_overview", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "visitkorea",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Yanolja",
            fields=[
                (
                    "yanolja_name",
                    models.CharField(max_length=200, primary_key=True, serialize=False),
                ),
                ("yanolja_address", models.CharField(max_length=255)),
                ("yanolja_image_link", models.TextField(blank=True, null=True)),
                (
                    "yanolja_rating",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("yanolja_link", models.TextField(blank=True, null=True)),
                ("yanolja_date", models.DateField(blank=True, null=True)),
                ("yanolja_price", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "yanolja",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Youtube",
            fields=[
                (
                    "youtube_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                (
                    "youtube_title",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "youtube_link",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "youtube_image",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "youtube_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "youtube_views",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "youtube_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
            options={
                "db_table": "youtube",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NearAttraction",
            fields=[
                (
                    "place",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="kdy_app.place",
                    ),
                ),
            ],
            options={
                "db_table": "near_attraction",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NearRestaurant",
            fields=[
                (
                    "place",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="kdy_app.place",
                    ),
                ),
            ],
            options={
                "db_table": "near_restaurant",
                "managed": False,
            },
        ),
    ]
